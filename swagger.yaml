openapi: 3.0.3
info:
  title: Bank Argent API documentation
  description: |-
    Contains all available API endpoints in this codebase
  termsOfService: http://swagger.io/terms/
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  /user/{accountID}:
    get:
      tags:
        - user
      summary: info of user
      description: get the user informations by his id.
      operationId: getUser
      parameters:
        - in: path
          name: accountID
          description: The user id to get data
          required: true
          schema:
            type: number
      responses:
        '200':
          description: User's transactions retrieved successully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction_Response'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction_Response'
  /user/{accountID}/{transactionID}:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: Creates list of users with given input array
      parameters:
        - in: path
          name: accountID
          description: Account ID to return transactions
          required: true
          schema:
            type: number
        - in: path
          name : transactionID
          description: Transaction ID to return transaction details
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction_Details_Response'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_Details_Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction_Details_Response'
        default:
          description: successful operation
    put: 
      tags:
        - user
      summary: Creates list of users with given input array
      description: Creates list of users with given input array
      parameters:
        - in: path
          name: accountID
          description: Account ID to return transactions
          required: true
          schema:
            type: number
        - in: path
          name : transactionID
          description: Transaction ID to return transaction details
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction_Details_Response'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction_Details_Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction_Details_Response'
        default:
          description: successful operation
    delete: 
      tags:
        - user
      summary: Creates list of users with given input array
      description: Creates list of users with given input array
      parameters:
        - in: path
          name: accountID
          description: Account ID to return transactions
          required: true
          schema:
            type: number
        - in: path
          name : transactionID
          description: Transaction ID to return transaction details
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delete_Response'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Delete_Response'
        default:
          description: successful operation
components:
  schemas:
    Transaction_Response: 
      type: object
      properties: 
        status: 
          type: integer
        message:
          type: string
        body:
          type: array
          items: 
            type: object
            properties:
              id: 
                type: number
                description: transaction ID
              date:
                type: string
                description: transaction date
              description:
                type: string
                description: transaction description
              amount:
                type: number
                description: transaction amount
              balance:
                type: number
                description: account balance
    Transaction_Details_Response: 
      type: object
      properties: 
        status: 
          type: integer
        message:
          type: string
        body:
          type: object
          items: 
            type: object
            properties:
              id: 
                type: number
                description: transaction ID
              transactionType:
                type: string
                description: transaction type
              category:
                type: string
                description: transaction category
              notes:
                type: string
                description: transaction notes
    Delete_Response: 
      type: object
      properties: 
        status: 
          type: integer
        message:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header